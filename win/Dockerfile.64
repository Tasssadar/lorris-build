FROM ubuntu:18.04

RUN apt-get update && \
    apt-get install -y mingw-w64-i686-dev mingw-w64-x86-64-dev mingw-w64 mingw-w64-tools \
    flex bison make build-essential python git curl zip xz-utils && \
    apt-get clean

WORKDIR /qtbuild
ARG QT_VER=5.12.3
ARG THREADS=2

RUN curl -L http://ftp.fau.de/qtproject/archive/qt/5.12/$QT_VER/single/qt-everywhere-src-$QT_VER.tar.xz | xz -d | tar -x && \
    cd qt-everywhere-src-$QT_VER && \
    ./configure -xplatform win32-g++ -device-option CROSS_COMPILE=x86_64-w64-mingw32- -opensource -confirm-license \
        -qt-zlib -qt-libpng -qt-freetype -prefix /usr/local/qt64 -release -nomake examples -nomake tools -nomake tests \
        -skip webengine -skip activeqt -skip qt3d -skip qtcanvas3d -skip qtmultimedia -skip qtwebglplugin \
        -skip qtlocation -opengl desktop \
        QMAKE_CXXFLAGS+="-march=nehalem -mtune=haswell" QMAKE_CFLAGS+="-march=nehalem -mtune=haswell" && \
    make -j$THREADS && \
    make install && \
    cd .. && rm -rf qt-everywhere-src-$QT_VER

ADD /build /build
WORKDIR /build

ENTRYPOINT git clone --depth=1 --recursive https://github.com/Tasssadar/Lorris.git && \
    cd Lorris && \
    /usr/local/qt64/bin/qmake CONFIG+=release QMAKE_CXXFLAGS+="-march=nehalem -mtune=haswell" QMAKE_CFLAGS+="-march=nehalem -mtune=haswell" -r && \
    make -j$THREADS && \
    cd .. && \
    python2 ./package_lorris.py Lorris package && \
    cd package && zip -r ../Lorris.zip * && \
    cp -v ../Lorris.zip /lorris-release/ && \
    cp -v version.txt /lorris-release/

VOLUME /lorris-release
